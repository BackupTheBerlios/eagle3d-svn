Trimmer Resistor
//*****************************************************************************
//
//      Trimmer Resistor Macro
//
//      Currently for BI Technology - 64Y and 64W series of Trimmer Resistors
//
//  By MC Cason <farmerboy1967(replace with at)gmail.com>
//  Inspiration was taken from the Trimmer macro, and the
//    RES_DIS_TRIM_KOERPER macro
//  By:
// Andreas Rebmann <A.Rebmann-Elektrotechnik@t-online.de>
// ich@ossiostborn.de alias CArt
//
// L:      Length
// W:      Width
// H:      Height
// Color:  Color of Body
// S_Dia:  Adjusting Screw Diameter
// Pitch:  Lead pitch of center lead
// Model:  Type of component
//*****************************************************************************
###############################################################################
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_TRIM_BI_TECH_64W(:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_TRIM_BI_TECH_64Y(:
###############################################################################
RES_DIS_TRIM_BI_TECH_GRND
(L,W,H,Color,S_Dia,Pitch,Model)
###############################################################################
// waagerecht
RES_DIS_TRIM_BI_TECH_64W(value)
(6.35,4.19,6.86,Khaki,1.78,0,"64W")
RES_DIS_TRIM_BI_TECH_64Y(value)
(6.35,4.19,6.86,Khaki,1.78,0,"64Y")
###############################################################################
###############################################################################
  union {
    // Adjust Lead Length
    #if(pin_short=off)
      // Long leads
      #local Lead_Length = -4.37;
    #else
      // Short leads 
      #local Lead_Length = -1*((pin_length+pcb_height)-0.2);
    #end

    union {
      // Basic Body
      #local Top_Bot=object{box{<0.2,0,0.2><L-0.2,0,W-0.2>}};
      object{Top_Bot translate<-L/2,  H,-W/2>} // Top
      object{Top_Bot translate<-L/2,0.2,-W/2>} // Bottom

      #local Left_Right=object{box{<0,0.2,0.2><0,H-0.2,W-0.2>}};
      object{Left_Right translate<-L/2,0,-W/2>} // Left
      object{Left_Right translate< L/2,0,-W/2>} // Right

      #local Front_Back=object{box{<0.2,0.2,0><L-0.2,H-0.2,0>}};
      object{Front_Back translate<-L/2,0,-W/2>} // Front
      object{Front_Back translate<-L/2,0, W/2>} // Back

      // Sides edges
      #local Sides=object{cylinder{<0,0,0> <0,H-0.4>0.20}};
      object{Sides translate<-L/2+0.2,0.2, W/2-0.2>} // Rear Left
      object{Sides translate< L/2-0.2,0.2, W/2-0.2>} // Rear Right
      object{Sides translate<-L/2+0.2,0.2,-W/2+0.2>} // Front Left
      object{Sides translate< L/2-0.2,0.2,-W/2+0.2>} // Front Right

      // Corners
      #local Sphere=object{sphere{<0,0,0>0.2 scale <1,1,1>}};
      object{Sphere translate<-L/2+0.2,H-0.2, W/2-0.2>} // Top Rear Left
      object{Sphere translate< L/2-0.2,H-0.2, W/2-0.2>} // Top Rear Right
      object{Sphere translate<-L/2+0.2,H-0.2,-W/2+0.2>} // Top Front Left
      object{Sphere translate< L/2-0.2,H-0.2,-W/2+0.2>} // Top Front Right
      object{Sphere translate<-L/2+0.2,  0.2, W/2-0.2>} // Bottom Rear Left
      object{Sphere translate< L/2-0.2,  0.2, W/2-0.2>} // Bottom Rear Right
      object{Sphere translate<-L/2+0.2,  0.2,-W/2+0.2>} // Bottom Front Left
      object{Sphere translate< L/2-0.2,  0.2,-W/2+0.2>} // Bottom Front Right

      // Left and Right Edges
      #local LR_Edge=object{cylinder{<0,0,0> <L-0.4,0,0>0.20}};
      object{LR_Edge translate<-L/2+0.2,H-0.2, W/2-0.2>} // Top Rear
      object{LR_Edge translate<-L/2+0.2,H-0.2,-W/2+0.2>} // Top Front
      object{LR_Edge translate<-L/2+0.2,  0.2, W/2-0.2>} // Bottom Rear
      object{LR_Edge translate<-L/2+0.2,  0.2,-W/2+0.2>} // Bottom Front

      // Top and Bottom Edges
      #local TB_Edge=object{cylinder{<0,0,0> <0,0,W-0.4>0.20}};
      object{TB_Edge translate<-L/2+0.2,H-0.2,-W/2+0.2>} // Top Left
      object{TB_Edge translate< L/2-0.2,H-0.2,-W/2+0.2>} // Top Right
      object{TB_Edge translate<-L/2+0.2,  0.2,-W/2+0.2>} // Bottom Left
      object{TB_Edge translate< L/2-0.2,  0.2,-W/2+0.2>} // Bottom Right
      pigment{Color}
    }

    // Leads
    union{
      #local Leads = object{ cylinder{<0,0.01,0> <0,Lead_Length,0>0.46/2}}
      object{Leads translate<-2.54,0,-Pitch>} // Lead 1
      object{Leads translate<    0,0, Pitch>} // Lead 2
      object{Leads translate< 2.54,0,-Pitch>} // Lead 3
      texture{col_silver}
    }
    // Adjustment Screw
    difference{
      cylinder{<0,0,0> <0,1.02,0>S_Dia/2}
      box{<-0.51/2,(1.02-0.51),-(S_Dia/2)-0.01> <0.51/2,1.021,(S_Dia/2)+0.01>}
      translate <-1.65,H-0.01,(W/2)-1.4>
      texture{col_silver}
    }
    union{
      text {ttf besch_font value 0.1,0 scale<1,1,0>
        rotate<-270,0,0> translate<-L/2+1.25,H+0.01,-W+2.5>}
      text {ttf besch_font Model 0.1,0 scale<1,1,0>
        rotate<-270,0,0> translate< L/2-2.5 ,H+0.01, W/2-1.25>}
      text {ttf besch_font "1"   0.1,0 scale<2,3,0>
        translate<-2.5,0.52,-W/2-0.01>}
      text {ttf besch_font "2"   0.1,0 scale<2,3,0>
        translate< -0.5,0.52,-W/2-0.01>}
      text {ttf besch_font "3"   0.1,0 scale<2,3,0>
        translate< 1.5,0.52,-W/2-0.01>}
      pigment{Black}
    }
  }
#end
