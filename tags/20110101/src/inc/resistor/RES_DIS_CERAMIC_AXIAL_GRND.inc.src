CERAMIC RECTANGULAR  HORIZONTAL POWER resisitors
// Auth: Joseph Zeglinski
// This macro creates "CERAMIC" RECTANGULAR  HORIZONTAL mount POWER resisitors - (short ones can be mounted vertically)
####################################################################################################
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW1_228MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW2_254MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW3_304MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW5_330MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW7_457MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW10_609MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW15_635MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW20_812MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW22_812MM_H(:resistor:
NOEAGLEPAC:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:RES_DIS_CERAMIC_AXIAL_PW25_812MM_H(:resistor:
####################################################################################################
RES_DIS_CERAMIC_AXIAL_GRND
(value, Length, Width, Wirelength, Wirewidth,  raster,  H_V, WATTS)
####################################################################################################
RES_DIS_CERAMIC_AXIAL_PW1_228MM_H(value)
(value, 15.0, 6.4, 25.4,  0.7,  22.86, "H", 1 )
RES_DIS_CERAMIC_AXIAL_PW2_254MM_H(value)
(value, 17.8, 6.8, 25.4,  0.7,  25.40, "H", 2 )
RES_DIS_CERAMIC_AXIAL_PW3_304MM_H(value)
(value, 22.4, 7.9, 28.4,  0.8,  30.48, "H", 3 )
RES_DIS_CERAMIC_AXIAL_PW5_330MM_H(value)
(value, 22.4, 9.7, 28.4,  0.8,  33.02, "H", 5 )
RES_DIS_CERAMIC_AXIAL_PW7_457MM_H(value)
(value, 36.0, 9.7, 31.8,  0.8,  45.72, "H", 7 )
RES_DIS_CERAMIC_AXIAL_PW10_609MM_H(value)
(value, 50.0, 9.7, 31.8,  0.8,  60.96, "H", 10)
RES_DIS_CERAMIC_AXIAL_PW15_635MM_H(value)
(value, 50.0, 12.7, 31.8,  0.8, 63.50, "H", 15)
RES_DIS_CERAMIC_AXIAL_PW20_812MM_H(value)
(value, 65.0, 14.2, 31.8,  0.8, 81.28, "H", 20)
RES_DIS_CERAMIC_AXIAL_PW22_812MM_H(value)
(value, 65.0, 14.2, 31.8,  0.8, 81.28, "H", 22)
RES_DIS_CERAMIC_AXIAL_PW25_812MM_H(value)
(value, 65.0, 14.2, 31.8,  0.8, 81.28, "H", 25)
####################################################################################################
####################################################################################################
union {

// ********************
// PWB Assembly Pratice:  For Components drawing LESS than 1 watt, should be in contact with PCB.
//                        Seperation must NOT exceed 3.0 mm (CLASS 1 and CLASS 2),
//                        or 0.7 mm for CLASS 3 components

//  I choose, an average seperation should be 1.5 mm for WATTS >= 1.0

        #if (WATTS >= 1.)
        #local Seperation = 1.5 ; 	// Best compromise for all types.
        #else
        #local Seperation = 0.0 ;
        #end
// *********************

union   {

#local L=Length/2;
#local W=Width/2;
#local LW=Wirewidth/2;
#local Horizontal = !(strcmp(strupr(H_V), "H") ); // string compare returns "0" (false) if equal; therefore, Negate this.
#local Stub = max( 0.8, Wirewidth );    // Set the component's "Stub Length" from the body to the start of bending
#local Bend_Radius = global_res_bend_radius;  // wire bending radius for ALL resistors - set globally

// Build HIGH POWER RESISTOR Horizontally
     union{
            // Make a bevelled box rsistor, cement colour & texture
            //superellipsoid {<0.05, 0.05>   scale <L,W,W> texture{T_Grnt1}  }

            Round_Box_Merge(<L,W,W> <-L,-W,-W> W/8 )  // Create rounded edges, flat, resistor body; edge radius = Width/16 mm

            box{<-(L-1.0), -(W+0.005), -(W-1.0)> <(L-1.0), -W, (W-1.0)>  pigment{ Gray65 }}  // make cement "filler" on bottom

            #if(Length <= raster) box{<-(L+0.01), -(W+0.01), -2*LW> <(L+0.01), 2*LW, 2*LW>  pigment{ Gray65 }} #end
            #if(Horizontal=no) box{<-(L+0.01), -(W+0.01), -2*LW> <(L+0.01), 2*LW, 2*LW>  pigment{ Gray65 }} #end
            texture{T_Grnt1}
           }
union{
//
// Print IDENT (value) on 2 (or optionally, 4) sides, for viewability:

#local Pwr1 = concat( "RCD   PW",  str(WATTS,0,0) );
#local Pwr2 = concat( value,  str(WATTS,3,0), "W" );
#local S = 2;  // Scale the letter size upto 2 mm., and print at top & bottom edges

#if( Horizontal = yes)
 // ID: XZ Top surface
        text {ttf besch_font Pwr1 0.01, 0 scale<S,S,S> translate<-6,W-S,-(W+0.01)> rotate<270,0,180> pigment{Black}}
 // XZ Top surface
        text {ttf besch_font Pwr2 0.01, 0 scale<S,S,S> translate<-5,-(W-S),-(W+0.01)> rotate<270,0,180> pigment{Black}}

#else

 // ID: XY Front surface
        text {ttf besch_font Pwr1 0.01, 0 scale<S,S,S> translate<-6,W-S,-(W+0.01)> rotate<180,0,180> pigment{Black}}
 // XY Front surface
        text {ttf besch_font Pwr2 0.01, 0 scale<S,S,S> translate<-5,-(W-S),-(W+0.01)> rotate<180,0,180> pigment{Black}}
 // ID: XY Back surface
        text {ttf besch_font Pwr1 0.01, 0 scale<S,S,S> translate<-6,W-S,-(W+0.01)> rotate<0,0,(Horizontal ? 0:180)> pigment{Black}}
 // XY Back surface
        text {ttf besch_font Pwr2 0.10, 0 scale<S,S,S> translate<-5,-(W-S),-(W+0.01)> rotate<0,0,(Horizontal ? 0:180)> pigment{Black}}

  #if (!Horizontal)
 // ID: XZ Bottom surface
       // text {ttf besch_font Pwr1 0.01, 0 scale<S,S,S> translate<-6,W-S,-(W+0.01)> rotate<90,0,180> pigment{Black}}
  // XZ Bottom surface
       // text {ttf besch_font Pwr2 0.01, 0 scale<S,S,S> translate<-5,-(W-S),-(W+0.01)> rotate<90,0,180> pigment{Black}}
  #end
#end
     }  // Unioned Text blocks

pigment{Black}

//

// ORIENTATION: *** Horizontal or Vertical *** RESISTOR?

# if (Horizontal=no)
rotate<0,0,90>
#else
rotate<0,180,0>
#end


    } // Unioned Text block and Resistor block

// Go build the wires

     object{ TOOLS_WIRE_LEADS(Length, Width, Wirelength, Wirewidth,  raster,  Bend_Radius, Seperation, H_V)  }

// Position the component above the PCB

        //#local Seperation = 1.5 ; 	// Best compromise for all types.

        #if (Horizontal=no)
                translate < -raster/2, (L+Stub+Seperation) ,0 >
        #else
                translate < 0, (W+Seperation ), 0 >
        #end

     }  // Unioned Resistor and it's pins

// ALL DONE: Horizontal or Vertical RESISTOR is positioned.

pigment{Gray50}
finish { phong 1  ambient (0.1 * global_ambient_mul)}

#end 